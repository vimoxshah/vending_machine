"""
Django config for doc_manager project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/config/

For the full list of config and their values, see
https://docs.djangoproject.com/en/2.1/ref/config/
"""
import raven
import sentry_sdk
from raven.middleware import Sentry
from sentry_sdk.integrations.celery import CeleryIntegration
from sentry_sdk.integrations.django import DjangoIntegration
from sentry_sdk.integrations.redis import RedisIntegration

from vending_machine.config.common import *

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "huu+gs44(0f)$eziiekq2dm$9-^4bfp7e-1%80^$_@wbbg8z1k"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# what host should we mention here
ALLOWED_HOSTS = ["*"]


USE_TZ = True
TIME_ZONE = "Asia/Kolkata"


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    # "filters": {
    #     "require_debug_false": {"()": "django.utils.log.RequireDebugFalse"},
    #     "require_debug_true": {"()": "django.utils.log.RequireDebugTrue"},
    # },
    "formatters": {
        "django.server": {
            "()": "django.utils.log.ServerFormatter",
            "format": "[%(server_time)s] %(message)s",
        },
        "verbose": {
            "format": "%(levelname)s  %(asctime)s  %(module)s %(process)d  %(thread)d  %(message)s"
        },
    },
    "filters": {

    },
    "handlers": {
        "console": {
            "level": "DEBUG",
            "filters": [],
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
        # "console_debug_false": {
        #     "level": "ERROR",
        #     "filters": ["require_debug_false"],
        #     "class": "logging.StreamHandler",
        # },
    },
    "loggers": {
        "django": {"handlers": ["console"], "propagate": False, "level": "DEBUG"},
        "": {"handlers": ["console"], "propagate": False, "level": "INFO"},
    },
}

# For celery
# RAVEN_CONFIG = {
#     "environment": "production",  # optional but very useful
#     # DSN can be obtained from sentry panel
#     "dsn": os.getenv("SENTRY_URL", ""),
# }
